@import ( reference ) '@wikimedia/codex-design-tokens/theme-wikimedia-ui.less';

// Base styles for groups of buttons. Used for ButtonGroup and ToggleButtonGroup.
// This mixin should be applied to the parent element of the buttons; apply
// .cdx-mixin-button-group-button() to the buttons themselves.
.cdx-mixin-button-group() {
	// Isolate the z-index hacks below into their own stacking context, so that they don't conflict
	// with other z-index tricks elsewhere on the page.
	position: relative;
	z-index: 0;

	// Make groups only as wide as they need to be, so that the rounded corners on the group also
	// apply to the rightmost button
	/* stylelint-disable-next-line plugin/no-unsupported-browser-features */
	width: fit-content;

	// Set rounded corners on the group, rather than on the individual buttons
	border-radius: @border-radius-base;

	// Add padding to compensate for the negative margins applied to the buttons
	padding-top: @border-width-base;
	padding-left: @border-width-base;

	// Needed to make the border-radius on the group affect the appearance of the children's borders
	overflow: hidden;
}

// Base styles for cdx-button and cdx-toggle-button components in a group
// Used for ButtonGroup and ToggleButtonGroup
// This mixin should be applied to the buttons themselves; apply .cdx-mixin-button-group() to the
// parent element of the buttons.
.cdx-mixin-button-group-button() {
	position: relative;

	// Put regular buttons above disabled buttons (which get z-index: 0;) below
	// We don't want to use z-index: -1; to push buttons below regular buttons, because then
	// they can't be clicked or hovered.
	z-index: 1;

	// To avoid double borders, shift each of the buttons (except the first one)
	// 1px to the left, so that its left border covers the right border of the button
	// before it, and only each button's left border is visible. Sometimes we need both or
	// neither of a button's borders to be visible, which is achieved with z-index rules
	// below. Also apply a negative top margin to avoid double borders when the buttons overflow
	// onto the next line
	margin-top: -@border-width-base;
	margin-left: -@border-width-base;

	// Make all borders sharp, overriding rounded corners. Add rounded corners back on the parent.
	border-radius: @border-radius-sharp;

	&:enabled:active,
	&:enabled:focus {
		// When a button is active or focused, both its left and its right border need to be
		// visible. Pull it up above the other buttons, so that its right border isn't
		// obscured by the next button's left border.
		// Use z-index: 3;, reserving z-index: 2; for toggled-on ToggleButtons, which should be
		// above regular buttons but below active/focused buttons (see ToggleButtonGroup)
		z-index: 3;
	}

	&:disabled {
		// When a button is disabled, its border is the same color as its background.
		// Push it down below the other buttons so that both it doesn't obscure its
		// neighbor's border
		z-index: 0;

		// When two disabled buttons are adjacent to each other, display a white line
		// between them. Using a border for this causes all sorts of problems, so use a
		// box-shadow on the left and top edges. When the line wraps between two disabled buttons,
		// this box-shadow will be painted to the left of the first button on the next line, but
		// =thankfully that places it outside of the button group's box, so it won't be visible
		// because the button group has overflow: hidden;
		box-shadow: @box-shadow-outset-small-top @box-shadow-color-inverted, @box-shadow-outset-small-start @box-shadow-color-inverted;
	}
}
