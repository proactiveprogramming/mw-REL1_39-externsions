@import ( reference ) '@wikimedia/codex-design-tokens/theme-wikimedia-ui.less';
// TODO: At least these first few should be design tokens.
// FIXME: Vite doesn't like the way we calculated these values previously, e.g.
// 20 / @font-size-browser / @font-size-base. There might be a better solution than this one:
@font-size-browser: 16; // Common (assumed) browser default of `16px`.
@font-size-base-value: 14 / @font-size-browser;
@font-size-base: unit( ( @font-size-base-value ), em ); // Equals `0.875em` at browser default of `16px`.

/* stylelint-disable-next-line function-url-quotes */
@background-image-input-checkbox--checked: url( 'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><path fill="%23fff" d="M7 14.17L2.83 10l-1.41 1.41L7 17 19 5l-1.41-1.42z"/></svg>' );
@size-icon-small: unit( ( 14 / @font-size-browser / @font-size-base-value ), em );

@size-input-binary: unit( ( 20 / @font-size-browser / @font-size-base-value ), em );
@start-input-binary-icon: unit( ( 3 / @font-size-browser / @font-size-base-value ), em );

@border-width-input-radio--checked: unit( ( 6 / @font-size-browser / @font-size-base-value ), em );

// Common styles for checkboxes and radios.
.cdx-mixin-binary-input() {
	/* stylelint-disable-next-line selector-not-notation */
	&:not( &--inline ) {
		display: block;
		// Since we have to use margin-right for inline inputs, use margin-bottom for stacked inputs
		// for consistency's sake.
		margin-bottom: @spacing-75;

		&:last-child {
			margin-bottom: 0;
		}
	}

	&--inline {
		// Use margin-right instead of left to avoid extra space at the beginning of a new line if
		// the inputs span multiple lines.
		margin-right: @spacing-100;
		// Avoid line break between icon and label text.
		white-space: nowrap;

		&:last-child {
			margin-right: 0;
		}
	}

	&__label {
		// This makes single-line labels only the width of their content and properly aligns
		// multi-line labels with the input.
		display: inline-block;
		position: relative;
		// Create a stacking context.
		z-index: 0;
		line-height: @line-height-x-small;
	}

	&__label-content {
		// Necessary to ensure label is indented properly if it spans multiple lines.
		display: inline-block;
		padding-left: @size-input-binary + 0.5em;
	}

	&--inline &__label-content {
		// Reset to inline to avoid extra space between input and label.
		display: inline;
	}

	// Custom-styled input that's visible to the user.
	&__icon {
		background-color: @background-color-base;
		position: absolute;
		left: 0;
		box-sizing: @box-sizing-base;
		width: @size-input-binary;
		height: @size-input-binary;
		border: @border-width-base @border-style-base @border-color-input-binary;
	}

	// HTML input element.
	&__input {
		// The actual input is visually hidden.
		opacity: 0;
		position: absolute;
		left: 0;
		// Render "on top of" the span, so that it's still clickable.
		z-index: 1;
		width: @size-input-binary;
		height: @size-input-binary;
		// Support Blink, Firefox, Safari: Normalize by removing user-agent stylesheet `margin`.
		margin: 0;
		font-size: inherit;
		cursor: inherit;
	}

	// Put selector outside `&__input` to not having to use string-based selectors
	// on the class attribute (`[ class$='__label-content' ]`).
	// Ensure that all elements receive cursor, when enabled.
	&__label:hover > &__input:enabled,
	&__label:hover > &__input:enabled ~ * {
		cursor: @cursor-base--hover;
	}
}
