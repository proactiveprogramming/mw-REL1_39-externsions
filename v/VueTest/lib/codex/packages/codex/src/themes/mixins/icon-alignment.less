@import ( reference ) '@wikimedia/codex-design-tokens/theme-wikimedia-ui.less';

// Style an icon suitable for display inside TextInput or a component that contains a Menu.
// This mixin requires three elements to work:
// - The icon parent element - This element should have a `position: relative` applied
// - The icon element - On which this mixin is applied
// - An icon sibling element (usually TextInput or component with Menu) - On which to apply
// the `.cdx-mixin-icon-wrapper-padding()` mixin
//
// @param {(start|end|center)} align - Tell the absolutely positioned icon where to anchor itself.
// @param {px|em} size - The size of the icon.
// @param {px} external-padding - The external horizontal padding expected on the parent element of the icon.
.cdx-mixin-icon( @param-align, @param-size: @size-icon, @param-external-padding: @spacing-75 ) {
	// Vertically center the icon by moving it down 50% of the height of the handle,
	// then moving it up by 50% of the height of the icon (translateY uses the element height
	// while top uses the offset parent's height).
	position: absolute;
	top: 50%;
	transform: translateY( -50% );
	transition-property: @transition-property-icon;
	transition-duration: @transition-duration-base;

	svg {
		width: @param-size;
		height: @param-size;
	}

	& when ( @param-align = start ) {
		left: @param-external-padding;
	};

	& when ( @param-align = end ) {
		right: @param-external-padding;
	};

	// Horizontally center the icon too.
	// Note, this could also be achieved by using Flexbox, by using `align-self: center;
	// vertical-align: initial;`
	& when ( @param-align = center ) {
		left: 50%;
		transform: translate( -50%, -50% );
	};
}

// Set the padding required in a parent “wrapper” element of an icon being displayed using
// `.cdx-mixin-icon()`.
// This mixin is only required when the icon has an `align` parameter set to `start` or `end`.
//
// @param {(start|end)} align - Determine on which side of the element to apply the padding. This must be
// the same value as the `align` parameter of the icon.
// @param {px} external-padding - The external horizontal padding expected on the parent element of the icon.
.cdx-mixin-icon-wrapper-padding( @param-align, @param-external-padding: @spacing-75, @param-size: @size-icon ) {
	& when ( @param-align = start ) {
		padding-left: @spacing-50 + @param-external-padding + @param-size;
	}

	& when ( @param-align = end ) {
		// For some reason stylelint is failing asking to remove the semicolons,
		// but it also fails if you remove it
		/* stylelint-disable-next-line no-extra-semicolons */
		padding-right: @spacing-50 + @param-external-padding + @param-size;
	}
};
