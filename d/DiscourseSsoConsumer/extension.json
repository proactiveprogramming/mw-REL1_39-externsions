{
    "name": "Discourse SSO Consumer",
    "version": "2.0.3",
    "author": [ "Matt Marjanovic" ],
    "url": "https://github.com/centertap/DiscourseSsoConsumer",
    "descriptionmsg": "discourse-sso-consumer-desc",
    "type": "other",
    "license-name":  "GPL-3.0-or-later",
    "requires": {
        "MediaWiki": ">=1.35.0",
        "extensions": {
            "PluggableAuth": "~5.7"
        },
        "platform": {
            "php": ">=7.4"
        }
    },
    "MessagesDirs": {
        "DiscourseSsoConsumer": [
            "i18n"
        ]
    },
    "AutoloadNamespaces": {
        "MediaWiki\\Extension\\DiscourseSsoConsumer\\": "src/"
    },
    "Hooks": {
        "BeforeInitialize": "MediaWiki\\Extension\\DiscourseSsoConsumer\\DiscourseSsoConsumer::onBeforeInitialize",
        "LoadExtensionSchemaUpdates": "MediaWiki\\Extension\\DiscourseSsoConsumer\\DiscourseSsoConsumer::onLoadExtensionSchemaUpdates",
        "PluggableAuthPopulateGroups": "MediaWiki\\Extension\\DiscourseSsoConsumer\\DiscourseSsoConsumer::onPluggableAuthPopulateGroups"
    },
    "config": {
        "DiscourseSsoConsumer_DiscourseUrl": {
            "value": null,
            "description": "Base URL of the Discourse server, typically of the form 'https://my-discourse-server.example.org'"
        },
        "DiscourseSsoConsumer_SsoProviderEndpoint": {
            "value": "/session/sso_provider",
            "description": "SSO provider endpoint of the Discourse server; a complete URL will be constructed by prepending DiscourseUrl."
        },
        "DiscourseSsoConsumer_SsoSharedSecret": {
            "value": null,
            "description": "Secret shared with the Discourse server (via its 'discourse connect provider secrets' setting)"
        },
        "DiscourseSsoConsumer_EnableDiscourseLogout": {
            "value": false,
            "description": "If true, logging out of MediaWiki will also cause logging out of Discourse."
        },
        "DiscourseSsoConsumer_LogoutApiEndpoint": {
            "value": "/admin/users/{id}/log_out.json",
            "description": "Endpoint for the log_out API of the Discourse server; complete URL will be constructed by prepending DiscourseUrl.  The substring '{id}' will be replaced by the logged-out user's id."
        },
        "DiscourseSsoConsumer_LogoutApiUsername": {
            "value": "system",
            "description": "Username for Discourse log_out API.  Must be set if EnableDiscourseLogout is true."
        },
        "DiscourseSsoConsumer_LogoutApiKey": {
            "value": null,
            "description": "Key for Discourse log_out API, generated by Discourse server.  Must be set if EnableDiscourseLogout is true."
        },
        "DiscourseSsoConsumer_EnableAutoRelogin": {
            "value": false,
            "description": "If true, automatically reauthenticate a user if their session has expired."
        },
        "DiscourseSsoConsumer_LinkExistingBy": {
            "value": [ ],
            "description": "Array of zero or more of instances of 'email' and/or 'username' in any order, to specify how to link a seen-for-the-first-time Discourse credentials to an existing Mediawiki account.  The 'email' method will attempt to link via email address.  The 'username' will attempt to link via canonicalized username.  Methods will be attempted in the order specified.  If no method succeeds in matching (or if no methods are specified), a new Mediawiki account will be created. "
        },
        "DiscourseSsoConsumer_ExposeName": {
            "value": false,
            "description": "If true, user's local realname will be updated from Discourse name; if false, local realname will be set to empty string."
        },
        "DiscourseSsoConsumer_ExposeEmail": {
            "value": false,
            "description": "If true, user's local email address will be updated from Discourse email address; if false, local email will be set to empty string."
        },
        "DiscourseSsoConsumer_GroupMaps": {
            "value": null,
            "description": "If non-null, an array specifying which local Mediawiki group memberships should be derived from Discourse credentials.  Membership in the specified groups will be toggled according to the credentials on each login; groups which are not mentioned here will not be touched.  Each element of the array should be of the form 'local-group' => [ 'discourse-group-1', 'discourse-group-2', ...].  Two special tokens '@ADMIN@' and '@MODERATOR@' can be used to represent the is_admin and is_moderator flags in the SSO credentials."
        },
        "PluggableAuth_Class": {
            "value": "MediaWiki\\Extension\\DiscourseSsoConsumer\\DiscourseSsoConsumer"
        }
    },
    "manifest_version": 2
}
